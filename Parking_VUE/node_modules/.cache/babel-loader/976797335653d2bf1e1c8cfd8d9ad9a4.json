{"remainingRequest":"C:\\MAMP\\htdocs\\imaster\\CICLO3\\vue-events-auth\\node_modules\\babel-loader\\lib\\index.js!C:\\MAMP\\htdocs\\imaster\\CICLO3\\vue-events-auth\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\MAMP\\htdocs\\imaster\\CICLO3\\vue-events-auth\\src\\auth\\authGuard.js","dependencies":[{"path":"C:\\MAMP\\htdocs\\imaster\\CICLO3\\vue-events-auth\\src\\auth\\authGuard.js","mtime":1631910008652},{"path":"C:\\MAMP\\htdocs\\imaster\\CICLO3\\vue-events-auth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\MAMP\\htdocs\\imaster\\CICLO3\\vue-events-auth\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\MAMP\\htdocs\\imaster\\CICLO3\\vue-events-auth\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZ2V0SW5zdGFuY2UgfSBmcm9tICIuL2luZGV4IjsKZXhwb3J0IHZhciBhdXRoR3VhcmQgPSBmdW5jdGlvbiBhdXRoR3VhcmQodG8sIGZyb20sIG5leHQpIHsKICB2YXIgYXV0aFNlcnZpY2UgPSBnZXRJbnN0YW5jZSgpOwoKICB2YXIgZm4gPSBmdW5jdGlvbiBmbigpIHsKICAgIC8vIElmIHRoZSB1c2VyIGlzIGF1dGhlbnRpY2F0ZWQsIGNvbnRpbnVlIHdpdGggdGhlIHJvdXRlCiAgICBpZiAoYXV0aFNlcnZpY2UuaXNBdXRoZW50aWNhdGVkKSB7CiAgICAgIHJldHVybiBuZXh0KCk7CiAgICB9IC8vIE90aGVyd2lzZSwgbG9nIGluCgoKICAgIGF1dGhTZXJ2aWNlLmxvZ2luV2l0aFJlZGlyZWN0KHsKICAgICAgYXBwU3RhdGU6IHsKICAgICAgICB0YXJnZXRVcmw6IHRvLmZ1bGxQYXRoCiAgICAgIH0KICAgIH0pOwogIH07IC8vIElmIGxvYWRpbmcgaGFzIGFscmVhZHkgZmluaXNoZWQsIGNoZWNrIG91ciBhdXRoIHN0YXRlIHVzaW5nIGBmbigpYAoKCiAgaWYgKCFhdXRoU2VydmljZS5sb2FkaW5nKSB7CiAgICByZXR1cm4gZm4oKTsKICB9IC8vIFdhdGNoIGZvciB0aGUgbG9hZGluZyBwcm9wZXJ0eSB0byBjaGFuZ2UgYmVmb3JlIHdlIGNoZWNrIGlzQXV0aGVudGljYXRlZAoKCiAgYXV0aFNlcnZpY2UuJHdhdGNoKCJsb2FkaW5nIiwgZnVuY3Rpb24gKGxvYWRpbmcpIHsKICAgIGlmIChsb2FkaW5nID09PSBmYWxzZSkgewogICAgICByZXR1cm4gZm4oKTsKICAgIH0KICB9KTsKfTs="},{"version":3,"sources":["C:/MAMP/htdocs/imaster/CICLO3/vue-events-auth/src/auth/authGuard.js"],"names":["getInstance","authGuard","to","from","next","authService","fn","isAuthenticated","loginWithRedirect","appState","targetUrl","fullPath","loading","$watch"],"mappings":"AAAA,SAASA,WAAT;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAC3C,MAAMC,WAAW,GAAGL,WAAW,EAA/B;;AAEA,MAAMM,EAAE,GAAG,SAALA,EAAK,GAAM;AACf;AACA,QAAID,WAAW,CAACE,eAAhB,EAAiC;AAC/B,aAAOH,IAAI,EAAX;AACD,KAJc,CAMf;;;AACAC,IAAAA,WAAW,CAACG,iBAAZ,CAA8B;AAAEC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,SAAS,EAAER,EAAE,CAACS;AAAhB;AAAZ,KAA9B;AACD,GARD,CAH2C,CAa3C;;;AACA,MAAI,CAACN,WAAW,CAACO,OAAjB,EAA0B;AACxB,WAAON,EAAE,EAAT;AACD,GAhB0C,CAkB3C;;;AACAD,EAAAA,WAAW,CAACQ,MAAZ,CAAmB,SAAnB,EAA8B,UAAAD,OAAO,EAAI;AACvC,QAAIA,OAAO,KAAK,KAAhB,EAAuB;AACrB,aAAON,EAAE,EAAT;AACD;AACF,GAJD;AAKD,CAxBM","sourcesContent":["import { getInstance } from \"./index\";\r\n\r\nexport const authGuard = (to, from, next) => {\r\n  const authService = getInstance();\r\n\r\n  const fn = () => {\r\n    // If the user is authenticated, continue with the route\r\n    if (authService.isAuthenticated) {\r\n      return next();\r\n    }\r\n\r\n    // Otherwise, log in\r\n    authService.loginWithRedirect({ appState: { targetUrl: to.fullPath } });\r\n  };\r\n\r\n  // If loading has already finished, check our auth state using `fn()`\r\n  if (!authService.loading) {\r\n    return fn();\r\n  }\r\n\r\n  // Watch for the loading property to change before we check isAuthenticated\r\n  authService.$watch(\"loading\", loading => {\r\n    if (loading === false) {\r\n      return fn();\r\n    }\r\n  });\r\n};"]}]}